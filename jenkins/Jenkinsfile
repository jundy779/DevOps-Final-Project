pipeline {
    agent any

    options {
        skipDefaultCheckout()
        timestamps()
    }

    environment {
        BACKEND_IMAGE = "faizalfandimulyadi/voting-backend:latest"
        FRONTEND_IMAGE = "faizalfandimulyadi/voting-frontend:latest"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Backend') {
            steps {
                dir('backend') {
                    script {
		      withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
          sh 'echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin'
        }
                        try {
                            sh 'docker build -t $BACKEND_IMAGE .'
                            sh 'docker push $BACKEND_IMAGE'
                        } catch (err) {
                            currentBuild.result = 'FAILURE'
                            error("Backend build failed: ${err}")
                        }
                    }
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    script {
                        try {
                            sh 'docker build -t $FRONTEND_IMAGE .'
                            sh 'docker push $FRONTEND_IMAGE'
                        } catch (err) {
                            currentBuild.result = 'FAILURE'
                            error("Frontend build failed: ${err}")
                        }
                    }
                }
            }
        }

        stage('Deploy (Manual)') {
            steps {
                echo "Deploy logic bisa ditambahkan nanti via SSH atau docker-compose"
            }
        }
    }

    post {
        failure {
            echo "Build failed! Please check the error logs."
        }
        success {
            echo "Build & Push berhasil!"
        }
    }
}
